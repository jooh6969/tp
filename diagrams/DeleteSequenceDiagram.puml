@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeleteCommandParser" as DeleteCommandParser LOGIC_COLOR
participant "d:DeleteCommand" as DeleteCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
participant ":AddressBook" as AddressBook MODEL_COLOR
participant ":UniquePersonList" as UniquePersonList MODEL_COLOR
end box

box Storage STORAGE_COLOR_T1
participant ":Storage" as Storage STORAGE_COLOR
end box

[-> LogicManager : execute("delete 1")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("delete 1")
activate AddressBookParser

create DeleteCommandParser
AddressBookParser -> DeleteCommandParser
activate DeleteCommandParser

DeleteCommandParser --> AddressBookParser
deactivate DeleteCommandParser

AddressBookParser -> DeleteCommandParser : parse("1")
activate DeleteCommandParser

create DeleteCommand
DeleteCommandParser -> DeleteCommand
activate DeleteCommand

DeleteCommand --> DeleteCommandParser :
deactivate DeleteCommand

DeleteCommandParser --> AddressBookParser : d
deactivate DeleteCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeleteCommandParser -[hidden]-> AddressBookParser
destroy DeleteCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> Model : commit()
activate Model
Model --> LogicManager
deactivate Model

LogicManager -> DeleteCommand : execute(m)
activate DeleteCommand

DeleteCommand -> Model : getFilteredPersonList()
activate Model
Model --> DeleteCommand : lastShownList
deactivate Model

DeleteCommand -> Model : deletePerson(personToDelete)
activate Model

Model -> AddressBook : removePerson(personToDelete)
activate AddressBook

AddressBook -> UniquePersonList : remove(personToDelete)
activate UniquePersonList
UniquePersonList --> AddressBook
deactivate UniquePersonList

AddressBook --> Model
deactivate AddressBook

Model --> DeleteCommand
deactivate Model

create CommandResult
DeleteCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteCommand
deactivate CommandResult

DeleteCommand --> LogicManager : r
deactivate DeleteCommand

LogicManager -> Storage : saveAddressBook(model.getAddressBook())
activate Storage
Storage --> LogicManager
deactivate Storage

[<--LogicManager
deactivate LogicManager
@enduml
